// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: fim.proto

#include "../fim.pb.h"
#include "../fim.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace fim {

class MockFimdStub : public Fimd::StubInterface {
 public:
  MOCK_METHOD3(CreateWatch, ::grpc::Status(::grpc::ClientContext* context, const ::fim::FimdConfig& request, ::fim::FimdHandle* response));
  MOCK_METHOD3(AsyncCreateWatchRaw, ::grpc::ClientAsyncResponseReaderInterface< ::fim::FimdHandle>*(::grpc::ClientContext* context, const ::fim::FimdConfig& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncCreateWatchRaw, ::grpc::ClientAsyncResponseReaderInterface< ::fim::FimdHandle>*(::grpc::ClientContext* context, const ::fim::FimdConfig& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(DestroyWatch, ::grpc::Status(::grpc::ClientContext* context, const ::fim::FimdConfig& request, ::fim::Empty* response));
  MOCK_METHOD3(AsyncDestroyWatchRaw, ::grpc::ClientAsyncResponseReaderInterface< ::fim::Empty>*(::grpc::ClientContext* context, const ::fim::FimdConfig& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncDestroyWatchRaw, ::grpc::ClientAsyncResponseReaderInterface< ::fim::Empty>*(::grpc::ClientContext* context, const ::fim::FimdConfig& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD2(GetWatchStateRaw, ::grpc::ClientReaderInterface< ::fim::FimdHandle>*(::grpc::ClientContext* context, const ::fim::Empty& request));
  MOCK_METHOD4(AsyncGetWatchStateRaw, ::grpc::ClientAsyncReaderInterface< ::fim::FimdHandle>*(::grpc::ClientContext* context, const ::fim::Empty& request, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD3(PrepareAsyncGetWatchStateRaw, ::grpc::ClientAsyncReaderInterface< ::fim::FimdHandle>*(::grpc::ClientContext* context, const ::fim::Empty& request, ::grpc::CompletionQueue* cq));
};

} // namespace fim

