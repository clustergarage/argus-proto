// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fim.proto

#include "fim.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace fim {
class FimdConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FimdConfig>
      _instance;
} _FimdConfig_default_instance_;
class FimWatcherSubjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FimWatcherSubject>
      _instance;
} _FimWatcherSubject_default_instance_;
class FimdHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FimdHandle>
      _instance;
} _FimdHandle_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
}  // namespace fim
namespace protobuf_fim_2eproto {
void InitDefaultsFimdConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_fim_2eproto::InitDefaultsFimWatcherSubject();
  {
    void* ptr = &::fim::_FimdConfig_default_instance_;
    new (ptr) ::fim::FimdConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fim::FimdConfig::InitAsDefaultInstance();
}

void InitDefaultsFimdConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFimdConfigImpl);
}

void InitDefaultsFimWatcherSubjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fim::_FimWatcherSubject_default_instance_;
    new (ptr) ::fim::FimWatcherSubject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fim::FimWatcherSubject::InitAsDefaultInstance();
}

void InitDefaultsFimWatcherSubject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFimWatcherSubjectImpl);
}

void InitDefaultsFimdHandleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fim::_FimdHandle_default_instance_;
    new (ptr) ::fim::FimdHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fim::FimdHandle::InitAsDefaultInstance();
}

void InitDefaultsFimdHandle() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFimdHandleImpl);
}

void InitDefaultsEmptyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fim::_Empty_default_instance_;
    new (ptr) ::fim::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fim::Empty::InitAsDefaultInstance();
}

void InitDefaultsEmpty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmptyImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdConfig, nodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdConfig, podname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdConfig, containerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdConfig, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdConfig, logformat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimWatcherSubject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimWatcherSubject, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimWatcherSubject, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimWatcherSubject, recursive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdHandle, nodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdHandle, podname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdHandle, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdHandle, processeventfd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::FimdHandle, mqfd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fim::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fim::FimdConfig)},
  { 10, -1, sizeof(::fim::FimWatcherSubject)},
  { 18, -1, sizeof(::fim::FimdHandle)},
  { 28, -1, sizeof(::fim::Empty)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fim::_FimdConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fim::_FimWatcherSubject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fim::_FimdHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fim::_Empty_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "fim.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tfim.proto\022\003fim\"\200\001\n\nFimdConfig\022\020\n\010nodeN"
      "ame\030\001 \001(\t\022\017\n\007podName\030\002 \001(\t\022\023\n\013containerI"
      "d\030\003 \003(\t\022\'\n\007subject\030\004 \003(\0132\026.fim.FimWatche"
      "rSubject\022\021\n\tlogFormat\030\005 \001(\t\"C\n\021FimWatche"
      "rSubject\022\014\n\004path\030\001 \003(\t\022\r\n\005event\030\002 \003(\t\022\021\n"
      "\trecursive\030\003 \001(\010\"b\n\nFimdHandle\022\020\n\010nodeNa"
      "me\030\001 \001(\014\022\017\n\007podName\030\002 \001(\014\022\013\n\003pid\030\003 \003(\005\022\026"
      "\n\016processEventfd\030\004 \003(\005\022\014\n\004mqFd\030\005 \001(\005\"\007\n\005"
      "Empty2h\n\004Fimd\0221\n\013CreateWatch\022\017.fim.FimdC"
      "onfig\032\017.fim.FimdHandle\"\000\022-\n\014DestroyWatch"
      "\022\017.fim.FimdConfig\032\n.fim.Empty\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 439);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fim.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fim_2eproto
namespace fim {

// ===================================================================

void FimdConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FimdConfig::kNodeNameFieldNumber;
const int FimdConfig::kPodNameFieldNumber;
const int FimdConfig::kContainerIdFieldNumber;
const int FimdConfig::kSubjectFieldNumber;
const int FimdConfig::kLogFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FimdConfig::FimdConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fim_2eproto::InitDefaultsFimdConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fim.FimdConfig)
}
FimdConfig::FimdConfig(const FimdConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      containerid_(from.containerid_),
      subject_(from.subject_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.podname().size() > 0) {
    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  logformat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logformat().size() > 0) {
    logformat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logformat_);
  }
  // @@protoc_insertion_point(copy_constructor:fim.FimdConfig)
}

void FimdConfig::SharedCtor() {
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FimdConfig::~FimdConfig() {
  // @@protoc_insertion_point(destructor:fim.FimdConfig)
  SharedDtor();
}

void FimdConfig::SharedDtor() {
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FimdConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FimdConfig::descriptor() {
  ::protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FimdConfig& FimdConfig::default_instance() {
  ::protobuf_fim_2eproto::InitDefaultsFimdConfig();
  return *internal_default_instance();
}

FimdConfig* FimdConfig::New(::google::protobuf::Arena* arena) const {
  FimdConfig* n = new FimdConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FimdConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:fim.FimdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  containerid_.Clear();
  subject_.Clear();
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FimdConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fim.FimdConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nodeName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fim.FimdConfig.nodeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string podName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_podname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->podname().data(), static_cast<int>(this->podname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fim.FimdConfig.podName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string containerId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_containerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->containerid(this->containerid_size() - 1).data(),
            static_cast<int>(this->containerid(this->containerid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fim.FimdConfig.containerId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fim.FimWatcherSubject subject = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logFormat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logformat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logformat().data(), static_cast<int>(this->logformat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fim.FimdConfig.logFormat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fim.FimdConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fim.FimdConfig)
  return false;
#undef DO_
}

void FimdConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fim.FimdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.nodeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nodename(), output);
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.podName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->podname(), output);
  }

  // repeated string containerId = 3;
  for (int i = 0, n = this->containerid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->containerid(i).data(), static_cast<int>(this->containerid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.containerId");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->containerid(i), output);
  }

  // repeated .fim.FimWatcherSubject subject = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subject_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->subject(static_cast<int>(i)), output);
  }

  // string logFormat = 5;
  if (this->logformat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logformat().data(), static_cast<int>(this->logformat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.logFormat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->logformat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fim.FimdConfig)
}

::google::protobuf::uint8* FimdConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fim.FimdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.nodeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodename(), target);
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.podName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->podname(), target);
  }

  // repeated string containerId = 3;
  for (int i = 0, n = this->containerid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->containerid(i).data(), static_cast<int>(this->containerid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.containerId");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->containerid(i), target);
  }

  // repeated .fim.FimWatcherSubject subject = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subject_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->subject(static_cast<int>(i)), deterministic, target);
  }

  // string logFormat = 5;
  if (this->logformat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logformat().data(), static_cast<int>(this->logformat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimdConfig.logFormat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->logformat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fim.FimdConfig)
  return target;
}

size_t FimdConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fim.FimdConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string containerId = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->containerid_size());
  for (int i = 0, n = this->containerid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->containerid(i));
  }

  // repeated .fim.FimWatcherSubject subject = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->subject_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subject(static_cast<int>(i)));
    }
  }

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->podname());
  }

  // string logFormat = 5;
  if (this->logformat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logformat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FimdConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fim.FimdConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const FimdConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FimdConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fim.FimdConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fim.FimdConfig)
    MergeFrom(*source);
  }
}

void FimdConfig::MergeFrom(const FimdConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fim.FimdConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  containerid_.MergeFrom(from.containerid_);
  subject_.MergeFrom(from.subject_);
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  if (from.podname().size() > 0) {

    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  if (from.logformat().size() > 0) {

    logformat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logformat_);
  }
}

void FimdConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fim.FimdConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FimdConfig::CopyFrom(const FimdConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fim.FimdConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FimdConfig::IsInitialized() const {
  return true;
}

void FimdConfig::Swap(FimdConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FimdConfig::InternalSwap(FimdConfig* other) {
  using std::swap;
  containerid_.InternalSwap(&other->containerid_);
  subject_.InternalSwap(&other->subject_);
  nodename_.Swap(&other->nodename_);
  podname_.Swap(&other->podname_);
  logformat_.Swap(&other->logformat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FimdConfig::GetMetadata() const {
  protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FimWatcherSubject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FimWatcherSubject::kPathFieldNumber;
const int FimWatcherSubject::kEventFieldNumber;
const int FimWatcherSubject::kRecursiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FimWatcherSubject::FimWatcherSubject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fim_2eproto::InitDefaultsFimWatcherSubject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fim.FimWatcherSubject)
}
FimWatcherSubject::FimWatcherSubject(const FimWatcherSubject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_),
      event_(from.event_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recursive_ = from.recursive_;
  // @@protoc_insertion_point(copy_constructor:fim.FimWatcherSubject)
}

void FimWatcherSubject::SharedCtor() {
  recursive_ = false;
  _cached_size_ = 0;
}

FimWatcherSubject::~FimWatcherSubject() {
  // @@protoc_insertion_point(destructor:fim.FimWatcherSubject)
  SharedDtor();
}

void FimWatcherSubject::SharedDtor() {
}

void FimWatcherSubject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FimWatcherSubject::descriptor() {
  ::protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FimWatcherSubject& FimWatcherSubject::default_instance() {
  ::protobuf_fim_2eproto::InitDefaultsFimWatcherSubject();
  return *internal_default_instance();
}

FimWatcherSubject* FimWatcherSubject::New(::google::protobuf::Arena* arena) const {
  FimWatcherSubject* n = new FimWatcherSubject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FimWatcherSubject::Clear() {
// @@protoc_insertion_point(message_clear_start:fim.FimWatcherSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  event_.Clear();
  recursive_ = false;
  _internal_metadata_.Clear();
}

bool FimWatcherSubject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fim.FimWatcherSubject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path(this->path_size() - 1).data(),
            static_cast<int>(this->path(this->path_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fim.FimWatcherSubject.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_event()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event(this->event_size() - 1).data(),
            static_cast<int>(this->event(this->event_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fim.FimWatcherSubject.event"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool recursive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recursive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fim.FimWatcherSubject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fim.FimWatcherSubject)
  return false;
#undef DO_
}

void FimWatcherSubject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fim.FimWatcherSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string path = 1;
  for (int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path(i).data(), static_cast<int>(this->path(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimWatcherSubject.path");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(i), output);
  }

  // repeated string event = 2;
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event(i).data(), static_cast<int>(this->event(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimWatcherSubject.event");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->event(i), output);
  }

  // bool recursive = 3;
  if (this->recursive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->recursive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fim.FimWatcherSubject)
}

::google::protobuf::uint8* FimWatcherSubject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fim.FimWatcherSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string path = 1;
  for (int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path(i).data(), static_cast<int>(this->path(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimWatcherSubject.path");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->path(i), target);
  }

  // repeated string event = 2;
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event(i).data(), static_cast<int>(this->event(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fim.FimWatcherSubject.event");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->event(i), target);
  }

  // bool recursive = 3;
  if (this->recursive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->recursive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fim.FimWatcherSubject)
  return target;
}

size_t FimWatcherSubject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fim.FimWatcherSubject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string path = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->path_size());
  for (int i = 0, n = this->path_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }

  // repeated string event = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->event_size());
  for (int i = 0, n = this->event_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->event(i));
  }

  // bool recursive = 3;
  if (this->recursive() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FimWatcherSubject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fim.FimWatcherSubject)
  GOOGLE_DCHECK_NE(&from, this);
  const FimWatcherSubject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FimWatcherSubject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fim.FimWatcherSubject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fim.FimWatcherSubject)
    MergeFrom(*source);
  }
}

void FimWatcherSubject::MergeFrom(const FimWatcherSubject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fim.FimWatcherSubject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  event_.MergeFrom(from.event_);
  if (from.recursive() != 0) {
    set_recursive(from.recursive());
  }
}

void FimWatcherSubject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fim.FimWatcherSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FimWatcherSubject::CopyFrom(const FimWatcherSubject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fim.FimWatcherSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FimWatcherSubject::IsInitialized() const {
  return true;
}

void FimWatcherSubject::Swap(FimWatcherSubject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FimWatcherSubject::InternalSwap(FimWatcherSubject* other) {
  using std::swap;
  path_.InternalSwap(&other->path_);
  event_.InternalSwap(&other->event_);
  swap(recursive_, other->recursive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FimWatcherSubject::GetMetadata() const {
  protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FimdHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FimdHandle::kNodeNameFieldNumber;
const int FimdHandle::kPodNameFieldNumber;
const int FimdHandle::kPidFieldNumber;
const int FimdHandle::kProcessEventfdFieldNumber;
const int FimdHandle::kMqFdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FimdHandle::FimdHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fim_2eproto::InitDefaultsFimdHandle();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fim.FimdHandle)
}
FimdHandle::FimdHandle(const FimdHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pid_(from.pid_),
      processeventfd_(from.processeventfd_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.podname().size() > 0) {
    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  mqfd_ = from.mqfd_;
  // @@protoc_insertion_point(copy_constructor:fim.FimdHandle)
}

void FimdHandle::SharedCtor() {
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqfd_ = 0;
  _cached_size_ = 0;
}

FimdHandle::~FimdHandle() {
  // @@protoc_insertion_point(destructor:fim.FimdHandle)
  SharedDtor();
}

void FimdHandle::SharedDtor() {
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FimdHandle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FimdHandle::descriptor() {
  ::protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FimdHandle& FimdHandle::default_instance() {
  ::protobuf_fim_2eproto::InitDefaultsFimdHandle();
  return *internal_default_instance();
}

FimdHandle* FimdHandle::New(::google::protobuf::Arena* arena) const {
  FimdHandle* n = new FimdHandle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FimdHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:fim.FimdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.Clear();
  processeventfd_.Clear();
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqfd_ = 0;
  _internal_metadata_.Clear();
}

bool FimdHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fim.FimdHandle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes nodeName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nodename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes podName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_podname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 processEventfd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_processeventfd())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_processeventfd())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mqFd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mqfd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fim.FimdHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fim.FimdHandle)
  return false;
#undef DO_
}

void FimdHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fim.FimdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->nodename(), output);
  }

  // bytes podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->podname(), output);
  }

  // repeated int32 pid = 3;
  if (this->pid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pid_cached_byte_size_));
  }
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pid(i), output);
  }

  // repeated int32 processEventfd = 4;
  if (this->processeventfd_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _processeventfd_cached_byte_size_));
  }
  for (int i = 0, n = this->processeventfd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->processeventfd(i), output);
  }

  // int32 mqFd = 5;
  if (this->mqfd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mqfd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fim.FimdHandle)
}

::google::protobuf::uint8* FimdHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fim.FimdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes nodeName = 1;
  if (this->nodename().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->nodename(), target);
  }

  // bytes podName = 2;
  if (this->podname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->podname(), target);
  }

  // repeated int32 pid = 3;
  if (this->pid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pid_, target);
  }

  // repeated int32 processEventfd = 4;
  if (this->processeventfd_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _processeventfd_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->processeventfd_, target);
  }

  // int32 mqFd = 5;
  if (this->mqfd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mqfd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fim.FimdHandle)
  return target;
}

size_t FimdHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fim.FimdHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 pid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 processEventfd = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->processeventfd_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _processeventfd_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes nodeName = 1;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nodename());
  }

  // bytes podName = 2;
  if (this->podname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->podname());
  }

  // int32 mqFd = 5;
  if (this->mqfd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mqfd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FimdHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fim.FimdHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const FimdHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FimdHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fim.FimdHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fim.FimdHandle)
    MergeFrom(*source);
  }
}

void FimdHandle::MergeFrom(const FimdHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fim.FimdHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_.MergeFrom(from.pid_);
  processeventfd_.MergeFrom(from.processeventfd_);
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  if (from.podname().size() > 0) {

    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  if (from.mqfd() != 0) {
    set_mqfd(from.mqfd());
  }
}

void FimdHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fim.FimdHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FimdHandle::CopyFrom(const FimdHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fim.FimdHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FimdHandle::IsInitialized() const {
  return true;
}

void FimdHandle::Swap(FimdHandle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FimdHandle::InternalSwap(FimdHandle* other) {
  using std::swap;
  pid_.InternalSwap(&other->pid_);
  processeventfd_.InternalSwap(&other->processeventfd_);
  nodename_.Swap(&other->nodename_);
  podname_.Swap(&other->podname_);
  swap(mqfd_, other->mqfd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FimdHandle::GetMetadata() const {
  protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_fim_2eproto::InitDefaultsEmpty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fim.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fim.Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:fim.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::protobuf_fim_2eproto::InitDefaultsEmpty();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:fim.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fim.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:fim.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fim.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fim.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fim.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fim.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fim.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fim.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fim.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fim.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fim.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fim.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fim.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fim.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_fim_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fim_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fim

// @@protoc_insertion_point(global_scope)
