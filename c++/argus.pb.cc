// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: argus.proto

#include "argus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_argus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_argus_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ArgusWatcherSubject_TagsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_argus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ArgusWatcherSubject;
}  // namespace protobuf_argus_2eproto
namespace argus {
class ArgusdConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArgusdConfig>
      _instance;
} _ArgusdConfig_default_instance_;
class ArgusWatcherSubject_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArgusWatcherSubject_TagsEntry_DoNotUse>
      _instance;
} _ArgusWatcherSubject_TagsEntry_DoNotUse_default_instance_;
class ArgusWatcherSubjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArgusWatcherSubject>
      _instance;
} _ArgusWatcherSubject_default_instance_;
class ArgusdHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArgusdHandle>
      _instance;
} _ArgusdHandle_default_instance_;
class ArgusdMetricsHandleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArgusdMetricsHandle>
      _instance;
} _ArgusdMetricsHandle_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
}  // namespace argus
namespace protobuf_argus_2eproto {
static void InitDefaultsArgusdConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::argus::_ArgusdConfig_default_instance_;
    new (ptr) ::argus::ArgusdConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::argus::ArgusdConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ArgusdConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsArgusdConfig}, {
      &protobuf_argus_2eproto::scc_info_ArgusWatcherSubject.base,}};

static void InitDefaultsArgusWatcherSubject_TagsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::argus::_ArgusWatcherSubject_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::argus::ArgusWatcherSubject_TagsEntry_DoNotUse();
  }
  ::argus::ArgusWatcherSubject_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArgusWatcherSubject_TagsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArgusWatcherSubject_TagsEntry_DoNotUse}, {}};

static void InitDefaultsArgusWatcherSubject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::argus::_ArgusWatcherSubject_default_instance_;
    new (ptr) ::argus::ArgusWatcherSubject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::argus::ArgusWatcherSubject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ArgusWatcherSubject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsArgusWatcherSubject}, {
      &protobuf_argus_2eproto::scc_info_ArgusWatcherSubject_TagsEntry_DoNotUse.base,}};

static void InitDefaultsArgusdHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::argus::_ArgusdHandle_default_instance_;
    new (ptr) ::argus::ArgusdHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::argus::ArgusdHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArgusdHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArgusdHandle}, {}};

static void InitDefaultsArgusdMetricsHandle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::argus::_ArgusdMetricsHandle_default_instance_;
    new (ptr) ::argus::ArgusdMetricsHandle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::argus::ArgusdMetricsHandle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArgusdMetricsHandle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArgusdMetricsHandle}, {}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::argus::_Empty_default_instance_;
    new (ptr) ::argus::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::argus::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ArgusdConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArgusWatcherSubject_TagsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArgusWatcherSubject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArgusdHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArgusdMetricsHandle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, nodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, podname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdConfig, logformat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject_TagsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject_TagsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, ignore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, onlydir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, recursive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, maxdepth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusWatcherSubject, tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdHandle, nodename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdHandle, podname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdHandle, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdHandle, processeventfd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdHandle, mqfd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdMetricsHandle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdMetricsHandle, arguswatcher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdMetricsHandle, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::ArgusdMetricsHandle, nodename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::argus::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::argus::ArgusdConfig)},
  { 12, 19, sizeof(::argus::ArgusWatcherSubject_TagsEntry_DoNotUse)},
  { 21, -1, sizeof(::argus::ArgusWatcherSubject)},
  { 33, -1, sizeof(::argus::ArgusdHandle)},
  { 43, -1, sizeof(::argus::ArgusdMetricsHandle)},
  { 51, -1, sizeof(::argus::Empty)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::argus::_ArgusdConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::argus::_ArgusWatcherSubject_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::argus::_ArgusWatcherSubject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::argus::_ArgusdHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::argus::_ArgusdMetricsHandle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::argus::_Empty_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "argus.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013argus.proto\022\005argus\"\231\001\n\014ArgusdConfig\022\014\n"
      "\004name\030\001 \001(\t\022\020\n\010nodeName\030\002 \001(\t\022\017\n\007podName"
      "\030\003 \001(\t\022\013\n\003pid\030\004 \003(\005\022\013\n\003cid\030\005 \003(\t\022+\n\007subj"
      "ect\030\006 \003(\0132\032.argus.ArgusWatcherSubject\022\021\n"
      "\tlogFormat\030\007 \001(\t\"\331\001\n\023ArgusWatcherSubject"
      "\022\014\n\004path\030\001 \003(\t\022\r\n\005event\030\002 \003(\t\022\016\n\006ignore\030"
      "\003 \003(\t\022\017\n\007onlyDir\030\004 \001(\010\022\021\n\trecursive\030\005 \001("
      "\010\022\020\n\010maxDepth\030\006 \001(\005\0222\n\004tags\030\007 \003(\0132$.argu"
      "s.ArgusWatcherSubject.TagsEntry\032+\n\tTagsE"
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"d\n\014"
      "ArgusdHandle\022\020\n\010nodeName\030\001 \001(\t\022\017\n\007podNam"
      "e\030\002 \001(\t\022\013\n\003pid\030\003 \003(\005\022\026\n\016processEventfd\030\004"
      " \003(\005\022\014\n\004mqFd\030\005 \001(\005\"L\n\023ArgusdMetricsHandl"
      "e\022\024\n\014argusWatcher\030\001 \001(\t\022\r\n\005event\030\002 \001(\t\022\020"
      "\n\010nodeName\030\003 \001(\t\"\007\n\005Empty2\357\001\n\006Argusd\0229\n\013"
      "CreateWatch\022\023.argus.ArgusdConfig\032\023.argus"
      ".ArgusdHandle\"\000\0223\n\014DestroyWatch\022\023.argus."
      "ArgusdConfig\032\014.argus.Empty\"\000\0226\n\rGetWatch"
      "State\022\014.argus.Empty\032\023.argus.ArgusdHandle"
      "\"\0000\001\022=\n\rRecordMetrics\022\014.argus.Empty\032\032.ar"
      "gus.ArgusdMetricsHandle\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 835);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "argus.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_argus_2eproto
namespace argus {

// ===================================================================

void ArgusdConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArgusdConfig::kNameFieldNumber;
const int ArgusdConfig::kNodeNameFieldNumber;
const int ArgusdConfig::kPodNameFieldNumber;
const int ArgusdConfig::kPidFieldNumber;
const int ArgusdConfig::kCidFieldNumber;
const int ArgusdConfig::kSubjectFieldNumber;
const int ArgusdConfig::kLogFormatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArgusdConfig::ArgusdConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_argus_2eproto::scc_info_ArgusdConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:argus.ArgusdConfig)
}
ArgusdConfig::ArgusdConfig(const ArgusdConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pid_(from.pid_),
      cid_(from.cid_),
      subject_(from.subject_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.podname().size() > 0) {
    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  logformat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logformat().size() > 0) {
    logformat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logformat_);
  }
  // @@protoc_insertion_point(copy_constructor:argus.ArgusdConfig)
}

void ArgusdConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ArgusdConfig::~ArgusdConfig() {
  // @@protoc_insertion_point(destructor:argus.ArgusdConfig)
  SharedDtor();
}

void ArgusdConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ArgusdConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArgusdConfig::descriptor() {
  ::protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArgusdConfig& ArgusdConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_argus_2eproto::scc_info_ArgusdConfig.base);
  return *internal_default_instance();
}


void ArgusdConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:argus.ArgusdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.Clear();
  cid_.Clear();
  subject_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logformat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ArgusdConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:argus.ArgusdConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdConfig.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nodeName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdConfig.nodeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string podName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_podname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->podname().data(), static_cast<int>(this->podname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdConfig.podName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cid(this->cid_size() - 1).data(),
            static_cast<int>(this->cid(this->cid_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdConfig.cid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .argus.ArgusWatcherSubject subject = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logFormat = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logformat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logformat().data(), static_cast<int>(this->logformat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdConfig.logFormat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:argus.ArgusdConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:argus.ArgusdConfig)
  return false;
#undef DO_
}

void ArgusdConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:argus.ArgusdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string nodeName = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.nodeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nodename(), output);
  }

  // string podName = 3;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.podName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->podname(), output);
  }

  // repeated int32 pid = 4;
  if (this->pid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pid_cached_byte_size_));
  }
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pid(i), output);
  }

  // repeated string cid = 5;
  for (int i = 0, n = this->cid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid(i).data(), static_cast<int>(this->cid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.cid");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->cid(i), output);
  }

  // repeated .argus.ArgusWatcherSubject subject = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subject_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->subject(static_cast<int>(i)),
      output);
  }

  // string logFormat = 7;
  if (this->logformat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logformat().data(), static_cast<int>(this->logformat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.logFormat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->logformat(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:argus.ArgusdConfig)
}

::google::protobuf::uint8* ArgusdConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:argus.ArgusdConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string nodeName = 2;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.nodeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nodename(), target);
  }

  // string podName = 3;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.podName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->podname(), target);
  }

  // repeated int32 pid = 4;
  if (this->pid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pid_, target);
  }

  // repeated string cid = 5;
  for (int i = 0, n = this->cid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cid(i).data(), static_cast<int>(this->cid(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.cid");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->cid(i), target);
  }

  // repeated .argus.ArgusWatcherSubject subject = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subject_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->subject(static_cast<int>(i)), deterministic, target);
  }

  // string logFormat = 7;
  if (this->logformat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logformat().data(), static_cast<int>(this->logformat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdConfig.logFormat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->logformat(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:argus.ArgusdConfig)
  return target;
}

size_t ArgusdConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:argus.ArgusdConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 pid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string cid = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cid_size());
  for (int i = 0, n = this->cid_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cid(i));
  }

  // repeated .argus.ArgusWatcherSubject subject = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->subject_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subject(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string nodeName = 2;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  // string podName = 3;
  if (this->podname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->podname());
  }

  // string logFormat = 7;
  if (this->logformat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logformat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArgusdConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:argus.ArgusdConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ArgusdConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArgusdConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:argus.ArgusdConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:argus.ArgusdConfig)
    MergeFrom(*source);
  }
}

void ArgusdConfig::MergeFrom(const ArgusdConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:argus.ArgusdConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_.MergeFrom(from.pid_);
  cid_.MergeFrom(from.cid_);
  subject_.MergeFrom(from.subject_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  if (from.podname().size() > 0) {

    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  if (from.logformat().size() > 0) {

    logformat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logformat_);
  }
}

void ArgusdConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:argus.ArgusdConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArgusdConfig::CopyFrom(const ArgusdConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:argus.ArgusdConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArgusdConfig::IsInitialized() const {
  return true;
}

void ArgusdConfig::Swap(ArgusdConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArgusdConfig::InternalSwap(ArgusdConfig* other) {
  using std::swap;
  pid_.InternalSwap(&other->pid_);
  cid_.InternalSwap(CastToBase(&other->cid_));
  CastToBase(&subject_)->InternalSwap(CastToBase(&other->subject_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nodename_.Swap(&other->nodename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  podname_.Swap(&other->podname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logformat_.Swap(&other->logformat_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArgusdConfig::GetMetadata() const {
  protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ArgusWatcherSubject_TagsEntry_DoNotUse::ArgusWatcherSubject_TagsEntry_DoNotUse() {}
ArgusWatcherSubject_TagsEntry_DoNotUse::ArgusWatcherSubject_TagsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ArgusWatcherSubject_TagsEntry_DoNotUse::MergeFrom(const ArgusWatcherSubject_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ArgusWatcherSubject_TagsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[1];
}
void ArgusWatcherSubject_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ArgusWatcherSubject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArgusWatcherSubject::kPathFieldNumber;
const int ArgusWatcherSubject::kEventFieldNumber;
const int ArgusWatcherSubject::kIgnoreFieldNumber;
const int ArgusWatcherSubject::kOnlyDirFieldNumber;
const int ArgusWatcherSubject::kRecursiveFieldNumber;
const int ArgusWatcherSubject::kMaxDepthFieldNumber;
const int ArgusWatcherSubject::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArgusWatcherSubject::ArgusWatcherSubject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_argus_2eproto::scc_info_ArgusWatcherSubject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:argus.ArgusWatcherSubject)
}
ArgusWatcherSubject::ArgusWatcherSubject(const ArgusWatcherSubject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_),
      event_(from.event_),
      ignore_(from.ignore_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  ::memcpy(&onlydir_, &from.onlydir_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxdepth_) -
    reinterpret_cast<char*>(&onlydir_)) + sizeof(maxdepth_));
  // @@protoc_insertion_point(copy_constructor:argus.ArgusWatcherSubject)
}

void ArgusWatcherSubject::SharedCtor() {
  ::memset(&onlydir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxdepth_) -
      reinterpret_cast<char*>(&onlydir_)) + sizeof(maxdepth_));
}

ArgusWatcherSubject::~ArgusWatcherSubject() {
  // @@protoc_insertion_point(destructor:argus.ArgusWatcherSubject)
  SharedDtor();
}

void ArgusWatcherSubject::SharedDtor() {
}

void ArgusWatcherSubject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArgusWatcherSubject::descriptor() {
  ::protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArgusWatcherSubject& ArgusWatcherSubject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_argus_2eproto::scc_info_ArgusWatcherSubject.base);
  return *internal_default_instance();
}


void ArgusWatcherSubject::Clear() {
// @@protoc_insertion_point(message_clear_start:argus.ArgusWatcherSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  event_.Clear();
  ignore_.Clear();
  tags_.Clear();
  ::memset(&onlydir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxdepth_) -
      reinterpret_cast<char*>(&onlydir_)) + sizeof(maxdepth_));
  _internal_metadata_.Clear();
}

bool ArgusWatcherSubject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:argus.ArgusWatcherSubject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path(this->path_size() - 1).data(),
            static_cast<int>(this->path(this->path_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusWatcherSubject.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_event()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event(this->event_size() - 1).data(),
            static_cast<int>(this->event(this->event_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusWatcherSubject.event"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ignore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ignore()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ignore(this->ignore_size() - 1).data(),
            static_cast<int>(this->ignore(this->ignore_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusWatcherSubject.ignore"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool onlyDir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &onlydir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool recursive = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recursive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxDepth = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxdepth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          ArgusWatcherSubject_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ArgusWatcherSubject_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusWatcherSubject.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusWatcherSubject.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:argus.ArgusWatcherSubject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:argus.ArgusWatcherSubject)
  return false;
#undef DO_
}

void ArgusWatcherSubject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:argus.ArgusWatcherSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string path = 1;
  for (int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path(i).data(), static_cast<int>(this->path(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusWatcherSubject.path");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(i), output);
  }

  // repeated string event = 2;
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event(i).data(), static_cast<int>(this->event(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusWatcherSubject.event");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->event(i), output);
  }

  // repeated string ignore = 3;
  for (int i = 0, n = this->ignore_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ignore(i).data(), static_cast<int>(this->ignore(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusWatcherSubject.ignore");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ignore(i), output);
  }

  // bool onlyDir = 4;
  if (this->onlydir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->onlydir(), output);
  }

  // bool recursive = 5;
  if (this->recursive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->recursive(), output);
  }

  // int32 maxDepth = 6;
  if (this->maxdepth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->maxdepth(), output);
  }

  // map<string, string> tags = 7;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "argus.ArgusWatcherSubject.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "argus.ArgusWatcherSubject.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ArgusWatcherSubject_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ArgusWatcherSubject_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:argus.ArgusWatcherSubject)
}

::google::protobuf::uint8* ArgusWatcherSubject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:argus.ArgusWatcherSubject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string path = 1;
  for (int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path(i).data(), static_cast<int>(this->path(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusWatcherSubject.path");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->path(i), target);
  }

  // repeated string event = 2;
  for (int i = 0, n = this->event_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event(i).data(), static_cast<int>(this->event(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusWatcherSubject.event");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->event(i), target);
  }

  // repeated string ignore = 3;
  for (int i = 0, n = this->ignore_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ignore(i).data(), static_cast<int>(this->ignore(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusWatcherSubject.ignore");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->ignore(i), target);
  }

  // bool onlyDir = 4;
  if (this->onlydir() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->onlydir(), target);
  }

  // bool recursive = 5;
  if (this->recursive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->recursive(), target);
  }

  // int32 maxDepth = 6;
  if (this->maxdepth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->maxdepth(), target);
  }

  // map<string, string> tags = 7;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "argus.ArgusWatcherSubject.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "argus.ArgusWatcherSubject.TagsEntry.value");
      }
    };

    if (deterministic &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ArgusWatcherSubject_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ArgusWatcherSubject_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:argus.ArgusWatcherSubject)
  return target;
}

size_t ArgusWatcherSubject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:argus.ArgusWatcherSubject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string path = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->path_size());
  for (int i = 0, n = this->path_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }

  // repeated string event = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->event_size());
  for (int i = 0, n = this->event_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->event(i));
  }

  // repeated string ignore = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ignore_size());
  for (int i = 0, n = this->ignore_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ignore(i));
  }

  // map<string, string> tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<ArgusWatcherSubject_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bool onlyDir = 4;
  if (this->onlydir() != 0) {
    total_size += 1 + 1;
  }

  // bool recursive = 5;
  if (this->recursive() != 0) {
    total_size += 1 + 1;
  }

  // int32 maxDepth = 6;
  if (this->maxdepth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxdepth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArgusWatcherSubject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:argus.ArgusWatcherSubject)
  GOOGLE_DCHECK_NE(&from, this);
  const ArgusWatcherSubject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArgusWatcherSubject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:argus.ArgusWatcherSubject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:argus.ArgusWatcherSubject)
    MergeFrom(*source);
  }
}

void ArgusWatcherSubject::MergeFrom(const ArgusWatcherSubject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:argus.ArgusWatcherSubject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  event_.MergeFrom(from.event_);
  ignore_.MergeFrom(from.ignore_);
  tags_.MergeFrom(from.tags_);
  if (from.onlydir() != 0) {
    set_onlydir(from.onlydir());
  }
  if (from.recursive() != 0) {
    set_recursive(from.recursive());
  }
  if (from.maxdepth() != 0) {
    set_maxdepth(from.maxdepth());
  }
}

void ArgusWatcherSubject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:argus.ArgusWatcherSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArgusWatcherSubject::CopyFrom(const ArgusWatcherSubject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:argus.ArgusWatcherSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArgusWatcherSubject::IsInitialized() const {
  return true;
}

void ArgusWatcherSubject::Swap(ArgusWatcherSubject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArgusWatcherSubject::InternalSwap(ArgusWatcherSubject* other) {
  using std::swap;
  path_.InternalSwap(CastToBase(&other->path_));
  event_.InternalSwap(CastToBase(&other->event_));
  ignore_.InternalSwap(CastToBase(&other->ignore_));
  tags_.Swap(&other->tags_);
  swap(onlydir_, other->onlydir_);
  swap(recursive_, other->recursive_);
  swap(maxdepth_, other->maxdepth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArgusWatcherSubject::GetMetadata() const {
  protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArgusdHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArgusdHandle::kNodeNameFieldNumber;
const int ArgusdHandle::kPodNameFieldNumber;
const int ArgusdHandle::kPidFieldNumber;
const int ArgusdHandle::kProcessEventfdFieldNumber;
const int ArgusdHandle::kMqFdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArgusdHandle::ArgusdHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_argus_2eproto::scc_info_ArgusdHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:argus.ArgusdHandle)
}
ArgusdHandle::ArgusdHandle(const ArgusdHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pid_(from.pid_),
      processeventfd_(from.processeventfd_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.podname().size() > 0) {
    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  mqfd_ = from.mqfd_;
  // @@protoc_insertion_point(copy_constructor:argus.ArgusdHandle)
}

void ArgusdHandle::SharedCtor() {
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqfd_ = 0;
}

ArgusdHandle::~ArgusdHandle() {
  // @@protoc_insertion_point(destructor:argus.ArgusdHandle)
  SharedDtor();
}

void ArgusdHandle::SharedDtor() {
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ArgusdHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArgusdHandle::descriptor() {
  ::protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArgusdHandle& ArgusdHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_argus_2eproto::scc_info_ArgusdHandle.base);
  return *internal_default_instance();
}


void ArgusdHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:argus.ArgusdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.Clear();
  processeventfd_.Clear();
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  podname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mqfd_ = 0;
  _internal_metadata_.Clear();
}

bool ArgusdHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:argus.ArgusdHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nodeName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdHandle.nodeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string podName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_podname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->podname().data(), static_cast<int>(this->podname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdHandle.podName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_pid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 processEventfd = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_processeventfd())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_processeventfd())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mqFd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mqfd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:argus.ArgusdHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:argus.ArgusdHandle)
  return false;
#undef DO_
}

void ArgusdHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:argus.ArgusdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdHandle.nodeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nodename(), output);
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdHandle.podName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->podname(), output);
  }

  // repeated int32 pid = 3;
  if (this->pid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _pid_cached_byte_size_));
  }
  for (int i = 0, n = this->pid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pid(i), output);
  }

  // repeated int32 processEventfd = 4;
  if (this->processeventfd_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _processeventfd_cached_byte_size_));
  }
  for (int i = 0, n = this->processeventfd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->processeventfd(i), output);
  }

  // int32 mqFd = 5;
  if (this->mqfd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mqfd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:argus.ArgusdHandle)
}

::google::protobuf::uint8* ArgusdHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:argus.ArgusdHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdHandle.nodeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodename(), target);
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->podname().data(), static_cast<int>(this->podname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdHandle.podName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->podname(), target);
  }

  // repeated int32 pid = 3;
  if (this->pid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _pid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pid_, target);
  }

  // repeated int32 processEventfd = 4;
  if (this->processeventfd_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _processeventfd_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->processeventfd_, target);
  }

  // int32 mqFd = 5;
  if (this->mqfd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mqfd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:argus.ArgusdHandle)
  return target;
}

size_t ArgusdHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:argus.ArgusdHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 pid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 processEventfd = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->processeventfd_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _processeventfd_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nodeName = 1;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  // string podName = 2;
  if (this->podname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->podname());
  }

  // int32 mqFd = 5;
  if (this->mqfd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mqfd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArgusdHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:argus.ArgusdHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const ArgusdHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArgusdHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:argus.ArgusdHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:argus.ArgusdHandle)
    MergeFrom(*source);
  }
}

void ArgusdHandle::MergeFrom(const ArgusdHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:argus.ArgusdHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pid_.MergeFrom(from.pid_);
  processeventfd_.MergeFrom(from.processeventfd_);
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  if (from.podname().size() > 0) {

    podname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.podname_);
  }
  if (from.mqfd() != 0) {
    set_mqfd(from.mqfd());
  }
}

void ArgusdHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:argus.ArgusdHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArgusdHandle::CopyFrom(const ArgusdHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:argus.ArgusdHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArgusdHandle::IsInitialized() const {
  return true;
}

void ArgusdHandle::Swap(ArgusdHandle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArgusdHandle::InternalSwap(ArgusdHandle* other) {
  using std::swap;
  pid_.InternalSwap(&other->pid_);
  processeventfd_.InternalSwap(&other->processeventfd_);
  nodename_.Swap(&other->nodename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  podname_.Swap(&other->podname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(mqfd_, other->mqfd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArgusdHandle::GetMetadata() const {
  protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArgusdMetricsHandle::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArgusdMetricsHandle::kArgusWatcherFieldNumber;
const int ArgusdMetricsHandle::kEventFieldNumber;
const int ArgusdMetricsHandle::kNodeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArgusdMetricsHandle::ArgusdMetricsHandle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_argus_2eproto::scc_info_ArgusdMetricsHandle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:argus.ArgusdMetricsHandle)
}
ArgusdMetricsHandle::ArgusdMetricsHandle(const ArgusdMetricsHandle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arguswatcher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arguswatcher().size() > 0) {
    arguswatcher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arguswatcher_);
  }
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.event().size() > 0) {
    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nodename().size() > 0) {
    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
  // @@protoc_insertion_point(copy_constructor:argus.ArgusdMetricsHandle)
}

void ArgusdMetricsHandle::SharedCtor() {
  arguswatcher_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ArgusdMetricsHandle::~ArgusdMetricsHandle() {
  // @@protoc_insertion_point(destructor:argus.ArgusdMetricsHandle)
  SharedDtor();
}

void ArgusdMetricsHandle::SharedDtor() {
  arguswatcher_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ArgusdMetricsHandle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ArgusdMetricsHandle::descriptor() {
  ::protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArgusdMetricsHandle& ArgusdMetricsHandle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_argus_2eproto::scc_info_ArgusdMetricsHandle.base);
  return *internal_default_instance();
}


void ArgusdMetricsHandle::Clear() {
// @@protoc_insertion_point(message_clear_start:argus.ArgusdMetricsHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguswatcher_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nodename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ArgusdMetricsHandle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:argus.ArgusdMetricsHandle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string argusWatcher = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arguswatcher()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arguswatcher().data(), static_cast<int>(this->arguswatcher().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdMetricsHandle.argusWatcher"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string event = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event().data(), static_cast<int>(this->event().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdMetricsHandle.event"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nodeName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nodename().data(), static_cast<int>(this->nodename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "argus.ArgusdMetricsHandle.nodeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:argus.ArgusdMetricsHandle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:argus.ArgusdMetricsHandle)
  return false;
#undef DO_
}

void ArgusdMetricsHandle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:argus.ArgusdMetricsHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string argusWatcher = 1;
  if (this->arguswatcher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguswatcher().data(), static_cast<int>(this->arguswatcher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdMetricsHandle.argusWatcher");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->arguswatcher(), output);
  }

  // string event = 2;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event().data(), static_cast<int>(this->event().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdMetricsHandle.event");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->event(), output);
  }

  // string nodeName = 3;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdMetricsHandle.nodeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nodename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:argus.ArgusdMetricsHandle)
}

::google::protobuf::uint8* ArgusdMetricsHandle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:argus.ArgusdMetricsHandle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string argusWatcher = 1;
  if (this->arguswatcher().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguswatcher().data(), static_cast<int>(this->arguswatcher().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdMetricsHandle.argusWatcher");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->arguswatcher(), target);
  }

  // string event = 2;
  if (this->event().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event().data(), static_cast<int>(this->event().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdMetricsHandle.event");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->event(), target);
  }

  // string nodeName = 3;
  if (this->nodename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nodename().data(), static_cast<int>(this->nodename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "argus.ArgusdMetricsHandle.nodeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nodename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:argus.ArgusdMetricsHandle)
  return target;
}

size_t ArgusdMetricsHandle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:argus.ArgusdMetricsHandle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string argusWatcher = 1;
  if (this->arguswatcher().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arguswatcher());
  }

  // string event = 2;
  if (this->event().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event());
  }

  // string nodeName = 3;
  if (this->nodename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nodename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArgusdMetricsHandle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:argus.ArgusdMetricsHandle)
  GOOGLE_DCHECK_NE(&from, this);
  const ArgusdMetricsHandle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArgusdMetricsHandle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:argus.ArgusdMetricsHandle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:argus.ArgusdMetricsHandle)
    MergeFrom(*source);
  }
}

void ArgusdMetricsHandle::MergeFrom(const ArgusdMetricsHandle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:argus.ArgusdMetricsHandle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.arguswatcher().size() > 0) {

    arguswatcher_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arguswatcher_);
  }
  if (from.event().size() > 0) {

    event_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_);
  }
  if (from.nodename().size() > 0) {

    nodename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nodename_);
  }
}

void ArgusdMetricsHandle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:argus.ArgusdMetricsHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArgusdMetricsHandle::CopyFrom(const ArgusdMetricsHandle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:argus.ArgusdMetricsHandle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArgusdMetricsHandle::IsInitialized() const {
  return true;
}

void ArgusdMetricsHandle::Swap(ArgusdMetricsHandle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArgusdMetricsHandle::InternalSwap(ArgusdMetricsHandle* other) {
  using std::swap;
  arguswatcher_.Swap(&other->arguswatcher_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  event_.Swap(&other->event_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nodename_.Swap(&other->nodename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArgusdMetricsHandle::GetMetadata() const {
  protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_argus_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:argus.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:argus.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:argus.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_argus_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:argus.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:argus.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:argus.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:argus.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:argus.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:argus.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:argus.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:argus.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:argus.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:argus.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:argus.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:argus.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:argus.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:argus.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:argus.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_argus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_argus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace argus
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::argus::ArgusdConfig* Arena::CreateMaybeMessage< ::argus::ArgusdConfig >(Arena* arena) {
  return Arena::CreateInternal< ::argus::ArgusdConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::argus::ArgusWatcherSubject_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::argus::ArgusWatcherSubject_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::argus::ArgusWatcherSubject_TagsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::argus::ArgusWatcherSubject* Arena::CreateMaybeMessage< ::argus::ArgusWatcherSubject >(Arena* arena) {
  return Arena::CreateInternal< ::argus::ArgusWatcherSubject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::argus::ArgusdHandle* Arena::CreateMaybeMessage< ::argus::ArgusdHandle >(Arena* arena) {
  return Arena::CreateInternal< ::argus::ArgusdHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::argus::ArgusdMetricsHandle* Arena::CreateMaybeMessage< ::argus::ArgusdMetricsHandle >(Arena* arena) {
  return Arena::CreateInternal< ::argus::ArgusdMetricsHandle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::argus::Empty* Arena::CreateMaybeMessage< ::argus::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::argus::Empty >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
